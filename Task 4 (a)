# Coded by Catalina Ionascu (Matriculation: 32100151 for Advanced Workbook DLBCSL01)
# Task 4 (b) Merge the first sequence with the second, the third with the fourth, and so on. If we start with 𝑘 sequences, after the pairwise merges, we are left with 𝑘/2 of them. Repeat until we are left with one sequence. 
k1 = [2000, 2000]
k2 = [1520, 3200]
k3 = [2300, 3000]
k4 = [2700, 3500]
k5 = [3400, 3600]
k6 = [3300]
k7 = [1230, 2500]
k8 = [4200]
govEmpIncome = [k1, k2, k3, k4, k5, k6, k7, k8]
test = [1]
position = 0
govEmpIncomeHalfed = []

#k12 = govEmpIncome[position]+govEmpIncome[position+1]
while len(govEmpIncome) > 1:
    for k in govEmpIncome:
        if position >= len(govEmpIncome)-1:
            break
        kxy = govEmpIncome[position]+govEmpIncome[position+1]
        kxy.sort()
        govEmpIncomeHalfed.append(kxy)
        position=position+2
        
    position = 0
    govEmpIncome = govEmpIncomeHalfed
    govEmpIncomeHalfed = []
    
#govEmpIncome contains now the list kxy

print(kxy)
